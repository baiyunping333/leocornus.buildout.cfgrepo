###################################################################
#
# buildout config file to build libgit2 library.
#
###################################################################

[src-versions]
libgit2 = 0.21.2
phpgit = 0.2.1

[downloads]
libgit2 = https://github.com/libgit2/libgit2/archive/v${src-versions:libgit2}.tar.gz
phpgit = https://github.com/libgit2/php-git/archive/v${src-versions:phpgit}.tar.gz

# extends from base.cfg
[libgit2-src]
<= base-download
url = ${downloads:libgit2}

# base command part is defined in base.cfg
[libgit2-build]
<= base-command
# libgit2 will be installed here, follow the buildout convension.
prefix = ${buildout:directory}/parts/libgit2-build
# some potential commands.
#   cmake --build . --target install
cmds = 
   mkdir -p ${:prefix}
   cd ${libgit2-src:location}
   cmake . -DCMAKE_INSTALL_PREFIX=${:prefix}
   make install

# parts to build php-git bindings.

[phpgit-src]
<= base-download
url = ${downloads:phpgit}
# try the development version.
#url = https://github.com/libgit2/php-git/archive/develop.zip

# phpgit depends on php, make sure to extend php-build.cfg
[phpgit-build]
<= base-command
php-location = ${php-build:location}
# set the extension dir, the default is for php version 5.6.2 
# and compile from source code
extension-dir = ${:php-location}/lib/php/extensions/no-debug-non-zts-20131226
php-config = ${:php-location}/bin/php-config
# Once build successfully, we need add one line in the php.ini file.
# extension = git2.so
cmds = 
#    mkdir -p ${phpgit-src:location}/libgit2/build
#    cd ${libgit2-src:location}
#    cmake . -DCMAKE_INSTALL_PREFIX=${phpgit-src:location}/libgit2/build
#    make install
    cd ${phpgit-src:location}/src
    ${:php-location}/bin/phpize
    ./configure --with-php-config=${:php-config}
    make
#    cp modules/git2.so ${:extension-dir}

# buildout parts to build php git bindings by clone source from github
[phpgit-build-github]
<= base-command
# We will clone fron github directly,
# make sure you have proper connection to github
clone-url = https://github.com/libgit2/php-git.git
# build debug as default, turn off by set it to empty
libgit2-debug = -DCMAKE_BUILD_TYPE=Debug
# flag for 64bit system, turn off by set it to empty.
64bit-flag = -DCMAKE_C_FLAGS=-fPIC
# turn off shared lib for libgit2
cmake-options = ${:libgit2-debug} -DBUILD_SHARED_LIBS=OFF -DBUILD_CLAR=OFF ${:64bit-flag}
# debug mode for php-git binding, turn off by set it to empty
git2-debug = --enable-git2-debug
php-config = ${php-build:location}/bin/php-config
location = ${buildout:directory}/parts/phpgit-github
# we will follow the build instruction from the github:
# https://github.com/libgit2/php-git
cmds =
    cd ${buildout:directory}/parts
    git clone ${:clone-url} phpgit-github
    cd phpgit-github
    git submodule init
    git submodule update
    mkdir libgit2/build
    cd libgit2/build
    cmake ${:cmake-options} ..
    cmake --build .
    make
    cd ../../
    ${php-build:location}/bin/phpize
    ./configure ${:git2-debug} --with-php-config=${:php-config}
    make
    make install

###################################################################
# try to generate the quick testing php code for the 
# git binding...
[phpgit-php]
<= base-generate-file-from-inline
filename = phpgit.php
target-folder = ${settings:document-root}
# the repository path has to be the root of a git repository,
# which has a .git folder. default is current folder.
repository-path = .
file-content =
    <?php
    $repo = git_repository_open("${:repository-path}");
    var_dump($repo);
    $reflog = git_reflog_read($repo, "HEAD");
   
    // some testing for the reference logs. 
    $count = git_reflog_entrycount($reflog);
    echo $count;
    for($i = 0; $i < $count; $i++) {
        $entry = git_reflog_entry_byindex($reflog, $i);
        $committer = git_reflog_entry_committer($entry);
        echo "name = " . $committer['name'] . '<br/>';
    }
   
    // walk through reversions or commits. 
    // echo out commit id, author, and commit message.
    $walker = git_revwalk_new($repo);
    git_revwalk_push_range($walker, "HEAD~200..HEAD");
    
    $index = 0;
    while($id = git_revwalk_next($walker)) {
        echo $index . " -- ";
        echo $id . " - ";
        $commit = git_commit_lookup($repo, $id);
        //var_dump($commit);
        echo $commit . "<br/>";
        $author = git_commit_author($commit);
        echo "---- " . $author['name'] . ' - ' . $author['email'] . "<br/>";
        echo "---- " . git_commit_message($commit) . "<br/>";
        //echo $commit['summary'] . "<br/>";
        $index++;
    }
