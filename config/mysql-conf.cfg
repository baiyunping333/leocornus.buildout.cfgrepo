###################################################################
# The buildout config file to generate cnf file for MySQL server.
# This will also try to generate some utilites around the 
# MySQL database server.
#
# DEPENDENCE
#
# This config depends on mysql-build.cfg
#
# Once the config file generate, you could add the 
# mysqld program to your supervisor parts:
#
# mysqld mysql-build/bin/mysqld [--defaults-file=mysql-cnf:output] false mysql
#
###################################################################

[ports]
mysql = 3306

[settings]
etc-directory = ${buildout:directory}/etc

# mysql configuration file for OPSpedia.
[mysql-cnf]
recipe = collective.recipe.template
output = ${settings:etc-directory}/mysql.cnf
# default port is 3306
port = ${ports:mysql}
socket = ${buildout:directory}/var/mysql/mysql.sock
datadir = ${buildout:directory}/var/mysql/data
# using the small configuration for UR database
inline =
    # Example MySQL config file for small systems.
    #
    # This is for a system with little memory (<= 64M) where MySQL is only used
    # from time to time and it's important that the mysqld daemon
    # doesn't use much resources.
    #
    # MySQL programs look for option files in a set of
    # locations which depend on the deployment platform.
    # You can copy this option file to one of those
    # locations. For information about these locations, see:
    # http://dev.mysql.com/doc/mysql/en/option-files.html
    #
    # In this file, you can use all long options that a program supports.
    # If you want to know which options a program supports, run the program
    # with the "--help" option.
    
    # The following options will be passed to all MySQL clients
    [client]
    #password   = your_password
    port                = ${:port}
    socket              = ${:socket}
    
    # Here follows entries for some specific programs
    
    # The MySQL server
    [mysqld]
    port                = ${:port}
    socket              = ${:socket}
    datadir             = ${:datadir}
    key_buffer_size = 16K
    max_allowed_packet = 1M
    table_open_cache = 4
    sort_buffer_size = 64K
    read_buffer_size = 256K
    read_rnd_buffer_size = 256K
    net_buffer_length = 2K
    thread_stack = 128K
    
    # Don't listen on a TCP/IP port at all. This can be a security enhancement,
    # if all processes that need to connect to mysqld run on the same host.
    # All interaction with mysqld must be made via Unix sockets or named pipes.
    # Note that using this option without enabling named pipes on Windows
    # (using the "enable-named-pipe" option) will render mysqld useless!
    # 
    #skip-networking
    server-id   = 1
    
    # Uncomment the following if you want to log updates
    #log-bin=mysql-bin
    
    # binary logging format - mixed recommended
    #binlog_format=mixed
    
    # Uncomment the following if you are using InnoDB tables
    #innodb_data_home_dir = /usr/local/rd/ur/branches/sean-startup/buildout/var/mysql/data
    #innodb_data_file_path = ibdata1:10M:autoextend
    #innodb_log_group_home_dir = /usr/local/rd/ur/branches/sean-startup/buildout/var/mysql/data
    # You can set .._buffer_pool_size up to 50 - 80 %
    # of RAM but beware of setting memory usage too high
    #innodb_buffer_pool_size = 16M
    #innodb_additional_mem_pool_size = 2M
    # Set .._log_file_size to 25 % of buffer pool size
    #innodb_log_file_size = 5M
    #innodb_log_buffer_size = 8M
    #innodb_flush_log_at_trx_commit = 1
    #innodb_lock_wait_timeout = 50
    
    [mysqldump]
    quick
    max_allowed_packet = 16M
    
    [mysql]
    no-auto-rehash
    # Remove the next comment character if you are not familiar with SQL
    #safe-updates
    
    [myisamchk]
    key_buffer_size = 8M
    sort_buffer_size = 8M
    
    [mysqlhotcopy]
    interactive-timeout

[mysql-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/mysql
inline =
    #! /usr/bin/env bash
    ${mysql-build:location}/bin/mysql --defaults-file=${mysql-cnf:output} $@
mode = 755

[mysqladmin-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/mysqladmin
inline =
    #! /usr/bin/env bash
    ${mysql-build:location}/bin/mysqladmin --defaults-file=${mysql-cnf:output} $@
mode = 755

[mysqlimport-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/mysqlimport
inline =
    #! /usr/bin/env bash
    ${mysql-build:location}/bin/mysqlimport --defaults-file=${mysql-cnf:output} $@
mode = 755

# this part only should be execute when it is required.
# no need to initial a database every time
[init-mysql-db]
recipe = plone.recipe.command
command =
    ${mysql-build:location}/scripts/mysql_install_db --basedir=${mysql-build:location} --datadir=${mysql-cnf:datadir}
